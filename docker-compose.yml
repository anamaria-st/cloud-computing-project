services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.5.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT_INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_BROKER_ID=1
    depends_on:
      - zookeeper

  simulator:
    build:
      context: ./simulator
    container_name: simulator
    environment:
      - BOOTSTRAP_SERVERS=kafka:29092

    depends_on:
      - kafka

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"

  detector:
    build:
      context: ./detector
    container_name: detector
    environment:
      - BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URI=mongodb://mongo:27017
      - INFLUXDB_HOST=influxdb
      - INFLUXDB_PORT=8086

    depends_on:
      - kafka
      - mongo

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - mongo
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb-storage:/var/lib/influxdb

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    depends_on:
      - mongo
      - influxdb
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
volumes:
  grafana-storage:
  influxdb-storage:
